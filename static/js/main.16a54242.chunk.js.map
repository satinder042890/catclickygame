{"version":3,"sources":["components/Title/index.js","components/ScoreArea/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Title","react_default","a","createElement","className","src","alt","id","ScoreArea","props","score","maxscore","Wrapper","image","onClick","update","App","state","images","maxScore","shuffle","data","i","length","j","Math","floor","random","temp","resetData","map","item","Object","objectSpread","clicked","_this","handleCorrectGuess","newData","_this$state","newScore","newTopScore","max","setState","handleIncorrectGuess","guessedCorrectly","newImages","newItem","_this2","this","components_Title","components_ScoreArea","components_Wrapper","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+qCAwBeA,SArBD,WACV,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,wDAAwDC,IAAI,eAEzEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAII,GAAG,QAAP,uBAAsCN,EAAAC,EAAAC,cAAA,WACtCF,EAAAC,EAAAC,cAAA,MAAII,GAAG,aAAP,wFCATC,SAXI,SAAAC,GACjB,OAEER,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,WACWK,EAAMC,MADjB,mBACwCD,EAAME,YCOnCC,SAXC,SAAAH,GACZ,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWE,IAAI,MAAMD,IAAKI,EAAMI,MAAOC,QAAS,kBAAML,EAAMM,OAAON,EAAMF,kBC2FjFS,6MA1FXC,MAAQ,CACJC,SACAR,MAAO,EACPS,SAAU,KAGdC,QAAU,SAAAC,GACP,IAAI,IAAIC,EAAED,EAAKE,OAAO,EAAGD,EAAE,EAAGA,IAAI,CAC9B,IAAME,EAAGC,KAAKC,MAAMD,KAAKE,UAAYL,EAAE,IACjCM,EAAOP,EAAKC,GAClBD,EAAKC,GAAKD,EAAKG,GACfH,EAAKG,GAAKI,EAEd,OAAOP,KAGVQ,UAAY,SAAAR,GACR,IAAMQ,EAAYR,EAAKS,IAAI,SAAAC,GAAI,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GAAUD,EAAV,CAAgBG,SAAS,MACxD,OAAOC,EAAKf,QAAQS,MAGxBO,mBAAqB,SAAAC,GAAW,IAAAC,EACAH,EAAKlB,MAAzBE,EADoBmB,EACpBnB,SACFoB,EAFsBD,EACV5B,MACO,EACnB8B,EAAcf,KAAKgB,IAAIF,EAAUpB,GAEvCgB,EAAKO,SAAS,CACZxB,OAAQiB,EAAKf,QAAQiB,GACrB3B,MAAO6B,EACPpB,SAAUqB,OAIdG,qBAAuB,SAAAtB,GACrBc,EAAKO,SAAS,CACZxB,OAAQiB,EAAKN,UAAUR,GACvBX,MAAO,OAMbK,OAAS,SAACR,GAEN,IAAIqC,GAAmB,EACjBC,EAAYV,EAAKlB,MAAMC,OAAOY,IAAI,SAAAC,GACpC,IAAMe,EAAOd,OAAAC,EAAA,EAAAD,CAAA,GAAQD,GAOnB,OANEe,EAAQvC,KAAOA,IACVuC,EAAQZ,UACXY,EAAQZ,SAAU,EAClBU,GAAmB,IAGhBE,IAEbF,EAAkBT,EAAKC,mBAAmBS,GAAYV,EAAKQ,qBAAqBE,4EAa3E,IAAAE,EAAAC,KACL,OACI/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAC+C,EAAD,CACCxC,MAAOsC,KAAK/B,MAAMP,MAClBC,SAAUqC,KAAK/B,MAAME,WAEtBlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACV4C,KAAK/B,MAAMC,OAAOY,IAAI,SAAAC,GAAI,OACvB9B,EAAAC,EAAAC,cAACgD,EAAD,CACIjB,QAASH,EAAKG,QACd3B,GAAIwB,EAAKxB,GACTM,MAAOkB,EAAKlB,MACZE,OAAQgC,EAAKhC,oBApFvBqC,mBCDlBC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.16a54242.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Title = () => {\r\n    return (\r\n\r\n        <div className=\"jumbotron\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <img src=\"https://media.giphy.com/media/huKYfJU2Uh4vS/giphy.gif\" alt=\"not found\" />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"heading\">\r\n                        <h1 id=\"head\">Interactive Puzzle!</h1><br />\r\n                        <h3 id=\"headintro\">Click on an image to earn points, but don't click on any image more than once!</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n const ScoreArea = props => {\r\n  return (\r\n    \r\n    <h1 className=\"text-center score\">\r\n      Score = {props.score}  |  Max Score ={props.maxscore}\r\n    </h1>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default ScoreArea;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Wrapper = props => {\r\n    return (\r\n      <div className=\"container-fluid main\">\r\n        <div className=\"img-container\">\r\n        <img className=\"imgclass\" alt=\"not\" src={props.image} onClick={() => props.update(props.id)}/>\r\n      </div>\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import React, { Component } from \"react\";\r\n\r\nimport Title from \"./components/Title\";\r\nimport ScoreArea from \"./components/ScoreArea\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport images from \"./images.json\";\r\nclass App extends Component {\r\n    // Setting this.state.friends to the friends json array\r\n    state = {\r\n        images,\r\n        score: 0,\r\n        maxScore: 0\r\n    };\r\n\r\n    shuffle = data =>{\r\n       for(let i=data.length-1; i>0; i--){\r\n           const j= Math.floor(Math.random() * (i+1))\r\n           const temp = data[i];\r\n           data[i] = data[j];\r\n           data[j] = temp;\r\n       }\r\n       return data;\r\n    }\r\n\r\n    resetData = data => {\r\n        const resetData = data.map(item => ({ ...item, clicked: false }));\r\n        return this.shuffle(resetData);\r\n      };\r\n    \r\n    handleCorrectGuess = newData => {\r\n        const { maxScore, score } = this.state;\r\n        const newScore = score + 1;\r\n        const newTopScore = Math.max(newScore, maxScore);\r\n    \r\n        this.setState({\r\n          images: this.shuffle(newData),\r\n          score: newScore,\r\n          maxScore: newTopScore\r\n        });\r\n      };\r\n    \r\n      handleIncorrectGuess = data => {\r\n        this.setState({\r\n          images: this.resetData(data),\r\n          score: 0\r\n        });\r\n      };\r\n    \r\n\r\n\r\n    update = (id) =>{\r\n        // alert(\"clicked = \"+clicked + \" id = \"+id);\r\n        let guessedCorrectly = false;\r\n        const newImages = this.state.images.map(item => {\r\n            const newItem = { ...item };\r\n            if (newItem.id === id) {\r\n                if (!newItem.clicked) {\r\n                  newItem.clicked = true;\r\n                  guessedCorrectly = true;\r\n                }\r\n              }\r\n              return newItem;\r\n        });\r\n        guessedCorrectly? this.handleCorrectGuess(newImages): this.handleIncorrectGuess(newImages);\r\n\r\n    }\r\n    \r\n    \r\n\r\n    // removeFriend = id => {\r\n    //     // Filter this.state.friends for friends with an id not equal to the id being removed\r\n    //     const friends = this.state.friends.filter(friend => friend.id !== id);\r\n    //     // Set this.state.friends equal to the new friends array\r\n    //     this.setState({ friends });\r\n    // };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <Title/>\r\n                <ScoreArea \r\n                 score={this.state.score}\r\n                 maxscore={this.state.maxScore}\r\n                />\r\n                <div className=\"container-fluid\">\r\n                    {this.state.images.map(item => (\r\n                        <Wrapper\r\n                            clicked={item.clicked}\r\n                            id={item.id}\r\n                            image={item.image}\r\n                            update={this.update}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}